# Base E-commerce View
# Foundation view with common joins for e-commerce analysis

view: base_ecommerce {
  extension: required
  from: orders
  
  # Core customer join - used in all e-commerce analyses
  join: customers {
    type: left_outer
    relationship: many_to_one
    expression: Orders[CustomerID] = Customers[CustomerID] ;;
  }
  
  # Core product join - essential for product analysis
  join: products {
    type: inner
    relationship: many_to_one
    expression: Orders[ProductID] = Products[ProductID] ;;
  }
}

# Retail Sales View - extends base with store information
view: retail_sales {
  extends: [base_ecommerce]
  
  # Add store information for brick-and-mortar analysis
  join: stores {
    type: left_outer
    relationship: many_to_one
    expression: Orders[StoreID] = Stores[StoreID] ;;
  }
  
  # Add store regions for geographic analysis
  join: store_regions {
    type: left_outer
    relationship: many_to_one
    expression: Stores[RegionID] = StoreRegions[RegionID] ;;
  }
}

# Online Sales View - extends base with digital-specific data
view: online_sales {
  extends: [base_ecommerce]
  
  # Add shipping information for delivery analysis
  join: shipping {
    type: left_outer
    relationship: one_to_one
    expression: Orders[OrderID] = Shipping[OrderID] ;;
  }
  
  # Add payment methods for transaction analysis
  join: payment_methods {
    type: left_outer
    relationship: many_to_one
    expression: Orders[PaymentMethodID] = PaymentMethods[PaymentMethodID] ;;
  }
  
  # Add marketing campaigns for attribution analysis
  join: marketing_campaigns {
    type: left_outer
    relationship: many_to_one
    expression: Orders[CampaignID] = MarketingCampaigns[CampaignID] ;;
  }
}

# Product Performance View - focuses on product metrics
view: product_performance {
  extends: [base_ecommerce]
  
  # Add detailed product information
  join: product_categories {
    type: left_outer
    relationship: many_to_one
    expression: Products[CategoryID] = ProductCategories[CategoryID] ;;
  }
  
  # Add suppliers for supply chain analysis
  join: suppliers {
    type: left_outer
    relationship: many_to_one
    expression: Products[SupplierID] = Suppliers[SupplierID] ;;
  }
  
  # Add inventory for stock analysis
  join: inventory {
    type: left_outer
    relationship: one_to_one
    expression: Products[ProductID] = Inventory[ProductID] ;;
  }
}

# Customer Analytics View - focuses on customer behavior
view: customer_analytics {
  extends: [base_ecommerce]
  
  # Add customer segments for behavioral analysis
  join: customer_segments {
    type: left_outer
    relationship: many_to_one
    expression: Customers[SegmentID] = CustomerSegments[SegmentID] ;;
  }
  
  # Add customer preferences
  join: customer_preferences {
    type: left_outer
    relationship: one_to_many
    expression: Customers[CustomerID] = CustomerPreferences[CustomerID] ;;
  }
  
  # Add loyalty program information
  join: loyalty_programs {
    type: left_outer
    relationship: many_to_one
    expression: Customers[LoyaltyProgramID] = LoyaltyPrograms[LoyaltyProgramID] ;;
  }
}

# Financial Analysis View - comprehensive financial reporting
view: financial_analysis {
  extends: [base_ecommerce]
  
  # Add cost information
  join: product_costs {
    type: left_outer
    relationship: many_to_one
    expression: Products[ProductID] = ProductCosts[ProductID] ;;
  }
  
  # Add discount information
  join: discounts {
    type: left_outer
    relationship: many_to_one
    expression: Orders[DiscountID] = Discounts[DiscountID] ;;
  }
  
  # Add tax information
  join: tax_rates {
    type: left_outer
    relationship: many_to_one
    expression: Orders[TaxRateID] = TaxRates[TaxRateID] ;;
  }
  
  # Add refunds and returns
  join: returns {
    type: left_outer
    relationship: one_to_many
    expression: Orders[OrderID] = Returns[OrderID] ;;
  }
}